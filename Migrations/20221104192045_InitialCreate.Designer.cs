// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RestApiProject.Data;

#nullable disable

namespace RestApiProject.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20221104192045_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RestApiProject.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CoverURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PagesCount")
                        .HasColumnType("integer");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("RestApiProject.Models.ClubMeeting", b =>
                {
                    b.Property<int>("ClubMeetingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClubMeetingId"));

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PresentationId")
                        .HasColumnType("integer");

                    b.HasKey("ClubMeetingId");

                    b.HasIndex("PresentationId");

                    b.ToTable("clubMeetings");
                });

            modelBuilder.Entity("RestApiProject.Models.Presentation", b =>
                {
                    b.Property<int>("PresentationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PresentationId"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("BookReview")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BookStore")
                        .HasColumnType("integer");

                    b.Property<string>("PresenationURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SpeakerId")
                        .HasColumnType("integer");

                    b.Property<string>("VideoURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PresentationId");

                    b.HasIndex("BookId");

                    b.HasIndex("SpeakerId");

                    b.ToTable("Presentations");
                });

            modelBuilder.Entity("RestApiProject.Models.Speaker", b =>
                {
                    b.Property<int>("SpeakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SpeakerId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SpeakerId");

                    b.ToTable("Speakers");
                });

            modelBuilder.Entity("RestApiProject.Models.ClubMeeting", b =>
                {
                    b.HasOne("RestApiProject.Models.Presentation", "Presentation")
                        .WithMany()
                        .HasForeignKey("PresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presentation");
                });

            modelBuilder.Entity("RestApiProject.Models.Presentation", b =>
                {
                    b.HasOne("RestApiProject.Models.Book", "Book")
                        .WithMany("Presentations")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestApiProject.Models.Speaker", null)
                        .WithMany("Presentations")
                        .HasForeignKey("SpeakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("RestApiProject.Models.Book", b =>
                {
                    b.Navigation("Presentations");
                });

            modelBuilder.Entity("RestApiProject.Models.Speaker", b =>
                {
                    b.Navigation("Presentations");
                });
#pragma warning restore 612, 618
        }
    }
}
